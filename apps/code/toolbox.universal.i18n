CmathModule = "cmath"
IonModule = "ion"
KandinskyModule = "kandinsky"
MathModule = "math"
MatplotlibPyplotModule = "matplotlib.pyplot"
TimeModule = "time"
TurtleModule = "turtle"
ForLoopMenu = "For"
IfStatementMenu = "If"
WhileLoopMenu = "While"
ConditionsMenu = "Conditions"
ConditionNot = "not "
ConditionOr = "or "
ConditionAnd = "and "
InferiorCondition = "<="
InferiorConditionWithArg = "x<=y"
SuperiorCondition = ">="
SuperiorConditionWithArg = "x>=y"
InferiorStrictCondition = "<"
InferiorStrictConditionWithArg = "x<y"
SuperiorStrictCondition = ">"
SuperiorStrictConditionWithArg = "x>y"
NonEqualityCondition = "!="
NonEqualityConditionWithArg = "x!=y"
EqualityCondition = "=="
EqualityConditionWithArg = "x==y"
WhileLoop = "while \x11:\n  "
WhileLoopWithArg = "while condition:\n  instruction"
IfOrIfElseStatement = "if \x11 or :\n  \nelse:\n  "
IfOrIfElseStatementWithArg = "if condition1 or condition2:\n  instruction1\nelse:\n  instruction2"
IfAndIfElseStatement = "if \x11 and :\n  \nelse:\n  "
IfAndIfElseStatementWithArg = "if condition1 and condition2:\n  instruction1\nelse:\n  instruction2"
IfElifElseStatement = "if \x11:\n  \nelif :\n  \nelse:\n  "
IfElifElseStatementWithArg = "if condition1:\n  instruction1\nelif condition2:\n  instruction2\nelse:\n  instruction3"
IfThenStatement= "if \x11:\n  "
IfThenStatementWithArg = "if condition:\n  instruction"
IfElseStatement = "if \x11:\n  \nelse:\n  "
IfElseStatementWithArg = "if condition:\n  instruction1\nelse:\n  instruction2"
ForInListLoop = "for i in \x11:\n  "
ForInListLoopWithArg = "for i in list:\n  instruction"
ForInRange3ArgsLoop = "for i in range(\x11,,):\n  "
ForInRange3ArgsLoopWithArg = "for i in range(start, stop, step):\n  instruction"
ForInRange2ArgsLoop = "for i in range(\x11,):\n  "
ForInRange2ArgsLoopWithArg = "for i in range(start, stop):\n  instruction"
ForInRange1ArgLoop = "for i in range(\x11):\n  "
ForInRange1ArgLoopWithArg = "for i in range(size):\n  instruction"
PythonCommandDef = "def \x11():\n  "
PythonCommandDefWithArg = "def function(x):"
PythonCommandReturn = "return "
RandomModule = "random"
